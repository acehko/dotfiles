" --- Vim-Plug Start ---

call plug#begin('~/.vim/plugged')


" Plugins

" General
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'nanotech/jellybeans.vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'vim-syntastic/syntastic'
Plug 'Valloric/YouCompleteMe', { 'do' : './install.py --gocode-completer' }
Plug 'raimondi/delimitmate'
Plug 'tpope/vim-fugitive'
Plug 'AndrewRadev/splitjoin.vim'

" Airline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" NERDTree
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'robinfehr/nerdtree-git-plugin'
Plug 'ryanoasis/vim-devicons'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'

" TypeScript
Plug 'Shougo/vimproc.vim',         { 'for' : 'typescript', 'do' : 'make' }
Plug 'Quramy/tsuquyomi',           { 'for' : 'typescript' }
Plug 'leafgarland/typescript-vim', { 'for' : 'typescript' }


" Golang
Plug 'fatih/vim-go', { 'for' : 'go' }


call plug#end()

" --- Vim-Plug End ---



" --- Vim Config Start ---

" General
set encoding=utf8         " UTF-8 FTW
set nocompatible          " Not compatible with Vi
set autoread              " Detect when a file has changed
set visualbell            " No beep on errors
set ttimeoutlen=50        " Remove delay on ESC
set clipboard=unnamedplus " Use system clipboard


" UI
syntax enable      " Enable syntax highlighting
silent! colorscheme jellybeans

set number         " Line numbers
set relativenumber " Relative line numbers
set wrap           " Word wrap
set showcmd        " Show current commands in the footer
set cursorline     " Highlight cursor line
set wildmenu       " Show tab options menu
set lazyredraw     " Redraw only when needed
set mouse=a        " Allow using the mouse

" Reset cursor on exit
autocmd VimLeave * set guicursor=a:hor20-blinkon1


" 'Change' and 'delete' saves text in a custom register
nnoremap c "cc
vnoremap c "cc
nnoremap C "cC
vnoremap C "cC

nnoremap d "dd
vnoremap d "dd
nnoremap D "dD
vnoremap D "dD

nnoremap x "xx
vnoremap x "xx
nnoremap X "xX
vnoremap X "xX


" Tabs and spaces
set tabstop=4
set softtabstop=4
set shiftwidth=4

set autoindent
set smartindent

set list
set listchars=tab:\ " Show tab guides


" Folding
set foldlevelstart=20
set viewoptions-=options

nnoremap <space> za
vnoremap <space> zf

autocmd FileType    * setlocal foldmethod=syntax
autocmd BufWinLeave * silent! mkview
autocmd BufWinEnter * silent! loadview


" Window management

" Window creation
map <C-w>h :vnew<CR>
map <C-w>j :below new<CR>
map <C-w>k :new<CR>
map <C-w>l :rightb vnew<CR>

map <C-w>x :q<CR> " Close a window

" Window movement
map <C-h> :wincmd h<CR>
map <C-j> :wincmd j<CR>
map <C-k> :wincmd k<CR>
map <C-l> :wincmd l<CR>

" Tab management
map <C-w>c :tabe<CR>
map <C-w>n :tabn<CR>
map <C-w>p :tabp<CR>


" Strip trailing whitespace and empty lines at the end of file
function! StripWhitespace()

	" Save the current search and cursor position
	let _s=@/
	let l = line('.')
	let c = col('.')

	" Strip the whitespace
	silent! :%s#\($\n\s*\)\+\%$## " Delete empty lines at the end of file
	silent! :%s/\s\+$//e          " Delete trailing whitespace

	" Restore the saved search and cursor position
	let @/=_s
	call cursor(l, c)

endfunction

" Strip whitespace on save
autocmd BufWritePre * :call StripWhitespace()


" --- Vim Config End ---



" --- Plugin Config Start ---


" EasyMotion
map <Leader> <Plug>(easymotion-prefix)


" NERDTree
map <C-b> :NERDTreeTabsToggle<CR>

let g:nerdtree_tabs_open_on_console_startup   = 2         " Open NERDTree if a directory was opened
let g:NERDTreeMapActivateNode                 = '<Space>' " Open / close directorties and files with space
let g:NERDTreeQuitOnOpen                      = 1         " Close NERDTree when opening a file
let g:NERDTreeDirArrowExpandable              = ""       " Custom collapsed icon
let g:NERDTreeDirArrowCollapsible             = ""       " Custom expanded icon
let g:NERDTreeGitStatusWithFlags              = 0         " Disable status flags
let g:NERDTreeGitStatusNodeColorization       = 1         " Enable status colors
let g:NERDTreeMinimalUI                       = 1         " Hide help text

hi Directory ctermfg                          = 110       " Change directory color


" CtrlP
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard'] " Ignore files in .gitignore
" Disable default keybind and rebind to close NERDTree and then open CtrlP
let g:ctrlp_map = '<Nop>'
map <C-p> :NERDTreeClose \| :CtrlP<CR>


" Airline
set laststatus=2                                 " Always show the status line
let g:airline#extensions#tabline#enabled  = 1    " Always show all buffers
let g:airline#extensions#tabline#fnamemod = ':t' " Show only filename in buffers
let g:airline_powerline_fonts             = 1    " Use powerline font
let g:airline_skip_empty_sections         = 1    " Don't display empty sections


" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list            = 1
let g:syntastic_check_on_wq	             = 0

" Language checkers
let g:syntastic_typescript_checkers  = ['tsuquyomi']
let g:syntastic_go_checkers          = ['govet', 'errcheck', 'go']


" YouCompleteMe
let g:ycm_show_diagnostics_ui = 0 " Disable error-checking. Handled by syntastic
set completeopt-=preview          " Disable preview window


" Tsuquyomi
let g:tsuquyomi_disable_quickfix = 1 " Disable vim quickfix window, syntastic will handle checks
" Bind TsuquyomiRenameSymbol on F2
autocmd FileType typescript nmap <buffer> <F2> <Plug>(TsuquyomiRenameSymbol)


" DevIcons
let g:webdevicons_enable_airline_statusline              = 1    " Enabled on airline
let g:WebDevIconsNerdTreeAfterGlyphPadding               = ''   " Padding after the icon
let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol   = ''  " Default icon for unknown file types
let g:WebDevIconsUnicodeDecorateFolderNodes              = 1    " Enable icons on folders
let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ' ' " Change folder icon
let g:DevIconsEnableFolderPatternMatching                = 0    " Disable custom icons on folders

" Custom file extension icons
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['swp'] = ''

" Custom exact match files
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = {}
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols['.npmignore'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols['.gitignore'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols['.vimrc']     = ''


" DelimitMate
let g:delimitMate_expand_cr = 1 " Auto-indent


" vim-go
let g:go_auto_type_info      = 0           " Don't run GoInfo automatically
let g:go_fmt_command         = 'goimports' " Use goimports instead of gofmt
let g:go_highlight_methods   = 1           " Highlight methods
let g:go_highlight_operators = 1           " Highlight operators

" Bind rename to F2
autocmd FileType go nmap <buffer> <F2> <Plug>(go-rename)


" --- Plugin Config End ---
